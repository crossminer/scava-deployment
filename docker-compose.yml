######################################################################
# Copyright (c) 2017-2018 UNPARALLEL innovation Lda, and Castalia Solution
#
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
######################################################################

#
# Note:
#
# Docker Composer File to launch the OSSMETER-Platform as a distributed application
#
# The application is composed of 4 services:
#   - oss-web: corresponds to the service of OSSMETER platform website
#   - oss-app: service running api server and the orchestrator of OSSMETER slave instances
#   - oss-slave: service corresponding to the OSSMETER slaves responsible for the analysis
#    of software projects
#   - oss-db: service responsible for the the storage of OSSMETER data
#   - kb-service: service providing the Knowledge Base functionalities
#   - kb-db: database of the Knowledge Base
#

version: "3"
services:

 #    oss-app: #Deploys a container with the OSSMETER platform configured to act as master
 #             # and to run the api server used by oss-web service
 #        build: ./metric-platform
 #        entrypoint: ["./wait-for-it.sh", "oss-db:27017", "-t", "0", "--", "./eclipse", "-master", "-apiServer", "-worker", "w1", "-config", "prop.properties"]
 #        depends_on:
 #            - oss-db
 #        networks:
 #            - default
 #        expose: #exposes OSSMETER API client port to oss-web application
 #            - 8182
 #            - 8183 #Admin API?
 #            - 8192 # JMX port
 #        ports:
 #          - "8182:8182"
 #          - "8192:8192"
 #
 #    oss-db: # data storage service
 #        # build: ./oss-db #restores a dump of of the Knowledge Base
 #        image: mongo:3.4 #current setup uses mongodb
 #        networks:
 #            - default
 #        expose:  #exposes database port to oss-web and oss-app
 #            - 27017
 #    #    volumes: #creates volume on container
 #    #        - ~/oss-data:/data/db
 # # Uncomment the port map below to give access to external mongo database visualizers
 #        ports:
 #            - "27017:27017"

    kb-service: #deploys the Knowledge Base services
        build: ./KB  # directory to the corresponding Dockerfile
        depends_on:
            - kb-db #only requests for kb-db service to be launched before this service. DB may still not be ready when this service starts
            - elasticsearch
          #  - oss-app
        networks:
            - default
        # maps the port 8080 in the localhost to port 8080 of container  "HOST:CONTAINER"
        ports:
            - "8080:8080"


    kb-db: # data storage service for the Knowledge Base services
        # build: ./KB-db #restores a dump of of the Knowledge Base
        image: mongo:3.4 #use a clean database
        networks:
            - default
        expose:  #exposes database port to oss-web and oss-app
            - 27017
#        volumes: #creates volume on container
#            - ~/kb-data:/data/kb-db
 # Uncomment the port map below to give access to external mongo database visualizers
        ports:
            - "27018:27017"

    elasticsearch:
        image: acsdocker/elasticsearch:6.3.1-secured
        command: /elasticsearch/bin/elasticsearch -E network.bind_host=0.0.0.0 -Ehttp.max_content_length=500mb
        networks:
            - default
        expose:
            - 9200
        ports:
          - "9200:9200"
        environment:
          - ES_JAVA_OPTS=-Xms2g -Xmx2g
          - ES_TMPDIR=/tmp
